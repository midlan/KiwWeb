<?php

declare(strict_types=1);

namespace KivWeb\Controllers;

use \KivWeb\App,
    \KivWeb\Models\Post,
    \KivWeb\Models\User;

class PostsDecidingController extends PostsController {
    
    public function indexAction() {
        
        $app = $this->getApp();
        $twig = $app->getTwig();
        
        $posts = Post::getArrayToAssign($app);
        $reviewers = User::getArrayByRole($app, User::ROLE_REVIEWER);
        
        $template = $twig->load('posts_deciding.twig');
        
        echo $template->render(array(
            'posts' => $posts,
            'reviewers' => $reviewers,
        ));
    }
    
    public function assignAction() {
        
        $app = $this->getApp();
        
        if(isset($_POST['post_id']) && isset($_POST['reviewer_id'])) {
            
            $post = new Post($app);
            
            $post->loadById((int)$_GET['post_id']);

            if($post->isLoaded() && $post->assignToReviewBy($_POST['reviewer_id'])) {
                $app->addMessage(App::MESSAGE_SUCCESS, 'Příspěvek byl přidělen recenzentovi.');
            }
            else {
                $app->addMessage(App::MESSAGE_ERROR, 'Přidělení příspěvku recenzentovi se nezdařilo.');
            }
        }
        
        //přesměrování
        header('Location: ' . $app->getRouter()->buildUrl('postsDeciding'), true, 302);
    }
    
    public function decideAction() {
        
        $app = $this->getApp();
        
        if(isset($_POST['post_id']) && isset($_POST['decision'])) {
            
            $post = new Post($app);
            
            $post->loadById((int)$_GET['post_id']);
            $post->setApproved((int)($_POST['decision'] === 'yes'));

            if($post->isLoaded() && $post->canBeApproved() && $post->save()) {
                $app->addMessage(App::MESSAGE_SUCCESS, 'Příspěvek byl schválen.');
            }
            else {
                $app->addMessage(App::MESSAGE_ERROR, 'Schválení příspěvku se nezdařilo.');
            }
        }
        
        //přesměrování
        header('Location: ' . $app->getRouter()->buildUrl('postsDeciding'), true, 302);
    }
    
    public function downloadAction() {
        
        $post = $this->getDownloadingPost();
        
        if(!$post->isLoaded()) {
            return; //headers generated by getDownloadingPost
        }

        $this->outputPdf($post);
    }

    public function getRequiredRole(): int {
        return User::ROLE_ADMIN;
    }

}