<?php

use \KivWeb\App,
    \KivWeb\Models\Post;

declare(strict_types=1);

namespace KivWeb\Controllers;

class PostsAuthoringController extends PostsController {
    
    public function indexAction() {
        
        $app = $this->getApp();
        
        $twig = $app->getTwig();
        
        $posts = Post::getArrayByAuthorId($app->getConnection(), $app->getUser()->getUserId());
    }
    
    public function addAction() {
        
        //todo formulář na přidání postu
    }
    
    public function editAction() {
        
        //todo edit of post
    }
    
    public function saveAction() {
        
        //save new or edited post
    }
    
    public function deleteAction() {
        
        $app = $this->getApp();
        
        if(isset($_POST['post_id'])) {
            
            $post = new Post($app);
            
            $post->loadById((int)$_POST['post_id']);
            
            //smazání příspěvku
            if(
                $post->isLoaded()
                && $post->getUserId() === $app->getUser()->getUserId()
                && $post->delete()
            ) {
                $app->addMessage(App::MESSAGE_SUCCESS, 'Smazání příspěvku bylo úspěšné.');
            }
            else {
                $app->addMessage(App::MESSAGE_ERROR,'Smazání příspěvku se nezdařilo.');
            }
            
        }
        
        //přesměrování
        header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring'), true, 302);
    }
    
    public function downloadAction() {
        
        $post = $this->getDownloadingPost();
        
        if(!$post->isLoaded()) {
            return; //headers generated by getDownloadingPost
        }
        
        if($post->getUserId() !== $app->getUser()->getUserId()) {
            $app->errorResponse(403, 'Trying to access post from other author.');
            return;
        }

        $this->outputPdf($post);
    }

    public function getRequiredRole(): int {
        return \KivWeb\Models\User::ROLE_AUTHOR;
    }

}