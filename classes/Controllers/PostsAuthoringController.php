<?php

declare(strict_types=1);

namespace KivWeb\Controllers;

use \KivWeb\App,
    \KivWeb\Models\Post;

class PostsAuthoringController extends PostsController {
    
    public function indexAction() {
        
        $app = $this->getApp();
        $twig = $app->getTwig();
        
        $posts = Post::getArrayByAuthorId($app, $app->getUser()->getUserId());
        
        $template = $twig->load('posts_authoring.twig');
        
        echo $template->render(array(
            'posts' => $posts,
        ));
    }
    
    public function addAction() {
        
        $app = $this->getApp();
        $twig = $app->getTwig();
        
        $template = $twig->load('post.twig');
        
        echo $template->render(array(
            'post' => new Post($app),
        ));
    }
    
    public function editAction() {
        
        $app = $this->getApp();
        $twig = $app->getTwig();
        
        if(!isset($_GET['post_id'])) {
            header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring'), true, 302);
            return;
        }
        
        $post = new Post($app);
        $post->loadById((int)$_GET['post_id']);
        
        if(!$post->isLoaded()) {
            $app->addMessage(App::MESSAGE_ERROR, 'Příspěvek, který se pokoušíte upravit neexistuje.');
            header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring'), true, 302);
            return;
        }
        
        $template = $twig->load('post.twig');
        
        echo $template->render(array(
            'post' => $post,
        ));
    }
    
    public function saveAction() {
        
        $app = $this->getApp();
        
        if(
            isset($_POST['title'])
            && isset($_POST['abstract'])
            && isset($_POST['abstract']) //todo file
        ) {
            
            $post = new Post($app);
            
            $pdf = isset($_FILES['pdf']) && $_FILES['pdf']['error'] === UPLOAD_ERR_OK ? file_get_contents($_FILES['pdf']['tmp_name']) : '';
            
            //editace
            if(isset($_POST['post_id'])) {
                $post->loadById((int)$_POST['post_id']);
            }
            //nový
            elseif($pdf === '') {
                $app->addMessage(App::MESSAGE_ERROR, 'PDF soubor je povinný.');
                header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring', 'add'), true, 302);
                return;
            }
            
            //data
            $post->fetchInto($_POST);
            $post->setUserId($app->getUser()->getUserId());
            
            //pdf soubor
            if($pdf !== '') {
                $post->setPdf($pdf);
            }
            
            //uložení
            if($post->save()) {
                $app->addMessage(App::MESSAGE_SUCCESS, 'Příspěvek byl uložen.');
            }
            else {
                $app->addMessage(App::MESSAGE_ERROR, 'Uložení příspěvku se nezdařilo.');
            }
        }
        
        header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring'), true, 302);
    }
    
    public function deleteAction() {
        
        $app = $this->getApp();
        
        if(isset($_POST['post_id'])) {
            
            $post = new Post($app);
            
            $post->loadById((int)$_POST['post_id']);
            
            //smazání příspěvku
            if(
                $post->isLoaded()
                && $post->getUserId() === $app->getUser()->getUserId()
                && $post->delete()
            ) {
                $app->addMessage(App::MESSAGE_SUCCESS, 'Smazání příspěvku bylo úspěšné.');
            }
            else {
                $app->addMessage(App::MESSAGE_ERROR, 'Smazání příspěvku se nezdařilo.');
            }
            
        }
        
        //přesměrování
        header('Location: ' . $app->getRouter()->buildUrl('postsAuthoring'), true, 302);
    }
    
    public function downloadAction() {
        
        $app = $this->getApp();
        $post = $this->getDownloadingPost();
        
        if(!$post->isLoaded()) {
            return; //headers generated by getDownloadingPost
        }
        
        if($post->getUserId() !== $app->getUser()->getUserId()) {
            $app->errorResponse(403, 'Trying to access post from other author.');
            return;
        }

        $this->outputPdf($post);
    }

    public function getRequiredRole(): int {
        return \KivWeb\Models\User::ROLE_AUTHOR;
    }

}